name: Publish Release
on:
  push:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  RUST_BACKTRACE: full

jobs:
  build:
    strategy:
      matrix:
        include:
          # x86_64-linux
          - arch: x86_64-linux
            os: ubuntu-latest
            target: amd64
          # aarch64-linux
          - arch: aarch64-linux
            os: ubuntu-24.04-arm
            target: arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Cache
        uses: actions/cache@v4
        with:
          path: target
          key: tsukimi-build-${{ matrix.arch }}-linux-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            tsukimi-build-${{ matrix.arch }}-linux-

      - name: Build ${{ matrix.arch }}
        run: |
          mkdir artifact
          echo "${{ secrets.DANDANPLAY_API_KEY }}" > secret/key
          docker run --rm --platform linux/${{ matrix.target }} -v ${{github.workspace}}:/app -v ./docker/entrypoint.sh:/entrypoint.sh ghcr.io/tsukinaha/ubuntu-rust-gtk4:latest
          sudo cp target/release/tsukimi artifact
          sudo cp -r i18n artifact
          sudo cp resources/moe*.xml artifact
          cd artifact
          tar -czf tsukimi-${{matrix.arch}}.tar.gz tsukimi moe.tsuna.tsukimi.gschema.xml i18n

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tsukimi-${{ matrix.arch }}
          path: |
            artifact/*.tar.gz
          compression-level: 0
          overwrite: true
          retention-days: 3
          if-no-files-found: error

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Calculate hash
        run: |
          mv tsukimi-x86_64-linux/* .
          mv tsukimi-aarch64-linux/* .
          sha512sum *.tar.gz >> tsukimi.sha512sum

      - name: Get latest tag name
        id: tag
        run: echo "TAG_NAME=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Set prerelease variable
        if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, 'rc')
        run: echo "PRERELEASE=true" >> $GITHUB_ENV

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            *.tar.gz
            tsukimi.sha512sum
          tag_name: ${{ steps.tag.outputs.TAG_NAME }}
          prerelease: ${{ env.PRERELEASE || false }}
